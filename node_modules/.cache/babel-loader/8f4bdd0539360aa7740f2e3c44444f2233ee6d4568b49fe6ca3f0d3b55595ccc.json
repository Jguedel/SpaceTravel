{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jgued\\\\ClassWork\\\\space-travel\\\\src\\\\pages\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport NavBar from \"../components/NavBar\";\nimport PlanetList from \"../context/PlanetList.js\";\nimport ShipList from \"../context/ShipList.js\";\nimport { useEffect, useState } from \"react\";\n//BOOTSTRAP\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  //STARTING PLANETS\n  let planetRender = [];\n  if (localStorage.getItem(\"allPlanetsList\") === [] || localStorage.getItem(\"allPlanetsList\") !== null) {\n    planetRender = [...JSON.parse(localStorage.getItem(\"allPlanetsList\"))];\n  } else {\n    planetRender = [...PlanetList];\n  }\n  // STARTING SHIPS\n  let shipRender = [];\n  if (localStorage.getItem(\"allShipList\") === [] || localStorage.getItem(\"allShipList\") !== null) {\n    shipRender = [...JSON.parse(localStorage.getItem(\"allShipList\"))];\n  } else {\n    shipRender = [...ShipList];\n  }\n  const [allPlanets, setAllPlanets] = useState(planetRender);\n  const [isLoading, setIsLoading] = useState(true);\n  // SETTING PLANETS AFTER INITIAL\n  useEffect(() => {\n    setIsLoading(isLoading => {\n      return false;\n    });\n  }, []);\n  useEffect(() => {\n    let holderPlanets = allPlanets;\n    allPlanets.forEach((planet, index) => {\n      shipRender.forEach(ship => {\n        if (planet.Name === ship.PlanetOn) {\n          let check = false;\n          planet.Ships.forEach(info => {\n            if (info.Name === ship.Name) {\n              check = true;\n            }\n          });\n          if (!check) {\n            holderPlanets[index].Ships.push(ship);\n            holderPlanets[index].Population = parseInt(holderPlanets[index].Population) + parseInt(ship.Population);\n          }\n          setAllPlanets(allPlanets => {\n            return holderPlanets;\n          });\n          localStorage.setItem(\"allPlanetsList\", JSON.stringify(allPlanets));\n        }\n      });\n    });\n  }, [allPlanets]);\n  const changePlanet = e => {\n    e.preventDefault();\n    console.log(e);\n    console.log(e.target.nextElementSibling);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center loading\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"1\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSpinner,\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), allPlanets.map(props => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          className: \"singlePlanet \",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: \"2\",\n            className: \"planetPic no-float\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.Img,\n              alt: props.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name: \", props.Name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Population: \", props.Population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), shipRender.map(props2 => {\n            if (props2.PlanetOn === props.Name) {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                className: \"planetShipInfo justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"shipsOnPlanet\",\n                  onClick: changePlanet,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: props2.Img,\n                      alt: props2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Name: \", props2.Name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Passengers: \", props2.Population]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this)\n              }, props2.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this);\n            }\n          })]\n        }, props.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Planets, \"CaCQVjXFkZ66VhMFEcIaRnvBdek=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["FontAwesomeIcon","faSpinner","NavBar","PlanetList","ShipList","useEffect","useState","Container","Row","Col","jsxDEV","_jsxDEV","Planets","_s","planetRender","localStorage","getItem","JSON","parse","shipRender","allPlanets","setAllPlanets","isLoading","setIsLoading","holderPlanets","forEach","planet","index","ship","Name","PlanetOn","check","Ships","info","push","Population","parseInt","setItem","stringify","changePlanet","e","preventDefault","console","log","target","nextElementSibling","children","className","sm","icon","spin","fileName","_jsxFileName","lineNumber","columnNumber","fluid","map","props","src","Img","alt","props2","onClick","key","_c","$RefreshReg$"],"sources":["C:/Users/jgued/ClassWork/space-travel/src/pages/Planets.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport PlanetList from \"../context/PlanetList.js\";\r\nimport ShipList from \"../context/ShipList.js\";\r\nimport { useEffect, useState } from \"react\";\r\n//BOOTSTRAP\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nconst Planets = () => {\r\n  //STARTING PLANETS\r\n  let planetRender = [];\r\n  if (\r\n    localStorage.getItem(\"allPlanetsList\") === [] ||\r\n    localStorage.getItem(\"allPlanetsList\") !== null\r\n  ) {\r\n    planetRender = [...JSON.parse(localStorage.getItem(\"allPlanetsList\"))];\r\n  } else {\r\n    planetRender = [...PlanetList];\r\n  }\r\n  // STARTING SHIPS\r\n  let shipRender = [];\r\n  if (\r\n    localStorage.getItem(\"allShipList\") === [] ||\r\n    localStorage.getItem(\"allShipList\") !== null\r\n  ) {\r\n    shipRender = [...JSON.parse(localStorage.getItem(\"allShipList\"))];\r\n  } else {\r\n    shipRender = [...ShipList];\r\n  }\r\n  const [allPlanets, setAllPlanets] = useState(planetRender);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // SETTING PLANETS AFTER INITIAL\r\n  useEffect(() => {\r\n    setIsLoading((isLoading) => {\r\n      return false;\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    let holderPlanets = allPlanets;\r\n    allPlanets.forEach((planet, index) => {\r\n      shipRender.forEach((ship) => {\r\n        if (planet.Name === ship.PlanetOn) {\r\n          let check = false;\r\n          planet.Ships.forEach((info) => {\r\n            if (info.Name === ship.Name) {\r\n              check = true;\r\n            }\r\n          });\r\n          if (!check) {\r\n            holderPlanets[index].Ships.push(ship);\r\n            holderPlanets[index].Population =\r\n              parseInt(holderPlanets[index].Population) +\r\n              parseInt(ship.Population);\r\n          }\r\n          setAllPlanets((allPlanets) => {\r\n            return holderPlanets;\r\n          });\r\n          localStorage.setItem(\"allPlanetsList\", JSON.stringify(allPlanets));\r\n        }\r\n      });\r\n    });\r\n  }, [allPlanets]);\r\n\r\n  const changePlanet = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    console.log(e.target.nextElementSibling);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center loading\">\r\n          <Col sm=\"1\">\r\n            <FontAwesomeIcon icon={faSpinner} spin />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container fluid>\r\n        <NavBar />\r\n\r\n        {allPlanets.map((props) => {\r\n          return (\r\n            <Row className=\"singlePlanet \" key={props.key}>\r\n              <Col sm=\"2\" className=\"planetPic no-float\">\r\n                <img src={props.Img} alt={props.Name} />\r\n                <p>Name: {props.Name}</p>\r\n                <p>Population: {props.Population}</p>\r\n              </Col>\r\n              {shipRender.map((props2) => {\r\n                if (props2.PlanetOn === props.Name) {\r\n                  return (\r\n                    <Col\r\n                      className=\"planetShipInfo justify-content-center\"\r\n                      key={props2.key}\r\n                    >\r\n                      <div className=\"shipsOnPlanet\" onClick={changePlanet}>\r\n                        <div>\r\n                          <img src={props2.Img} alt={props2.Name} />\r\n                        </div>\r\n                        <div>\r\n                          <p>Name: {props2.Name}</p>\r\n                          <p>Passengers: {props2.Population}</p>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                }\r\n              })}\r\n            </Row>\r\n          );\r\n        })}\r\n      </Container>\r\n    );\r\n  }\r\n};\r\nexport default Planets;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}