{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jgued\\\\ClassWork\\\\space-travel\\\\src\\\\pages\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport NavBar from \"../components/NavBar\";\nimport PlanetList from \"../context/PlanetList.js\";\nimport ShipList from \"../context/ShipList.js\";\nimport { useEffect, useState } from \"react\";\n//BOOTSTRAP\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  //STARTING PLANETS\n  const pList = [{\n    Name: null,\n    Population: null,\n    Img: null,\n    Ships: [],\n    key: null\n  }];\n  // STARTING SHIPS\n  let shipRender = [];\n  if (localStorage.getItem(\"allShipList\") === [] || localStorage.getItem(\"allShipList\") !== null) {\n    shipRender = [...JSON.parse(localStorage.getItem(\"allShipList\"))];\n  } else {\n    shipRender = [...ShipList];\n  }\n  const [allPlanets, setAllPlanets] = useState(pList);\n  const [isLoading, setIsLoading] = useState(true);\n  // SETTING PLANETS AFTER INITIAL\n  useEffect(() => {\n    if (allPlanets.length === 1) {\n      if (localStorage.getItem(\"allPlanetsList\") == null) {\n        setAllPlanets(allPlanets => {\n          return PlanetList;\n        });\n        setIsLoading(isLoading => {\n          return false;\n        });\n      } else {\n        localStorage.removeItem(\"allPlanetsList\");\n        setAllPlanets(allPlanets => {\n          const obj = JSON.parse(localStorage.getItem(\"allPlanetsList\"));\n          return obj;\n        });\n        setIsLoading(isLoading => {\n          return false;\n        });\n      }\n    } else {}\n  }, [allPlanets]);\n  localStorage.setItem(\"allPlanetsList\", JSON.stringify(allPlanets));\n  let holderPlanets = allPlanets;\n  allPlanets.forEach(planet => {\n    shipRender.forEach(ship => {\n      console.log(planet.Name);\n      console.log(ship.PlanetOn);\n      if (planet.Name === ship.PlanetOn) {}\n    });\n  });\n  console.log(allPlanets);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center loading\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"1\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSpinner,\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), allPlanets.map(props => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          className: \"singlePlanet \",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: \"2\",\n            className: \"planetPic no-float\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.Img,\n              alt: props.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name: \", props.Name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Population: \", props.Population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), shipRender.map(props2 => {\n            if (props2.PlanetOn === props.Name) {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                className: \"planetShipInfo justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"shipsOnPlanet\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: props2.Img,\n                      alt: props2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Name: \", props2.Name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Passengers: \", props2.Population]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this)\n              }, props2.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this);\n            }\n          })]\n        }, props.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Planets, \"9UiqIewEkNuazURDP8cC4LE2yXA=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["FontAwesomeIcon","faSpinner","NavBar","PlanetList","ShipList","useEffect","useState","Container","Row","Col","jsxDEV","_jsxDEV","Planets","_s","pList","Name","Population","Img","Ships","key","shipRender","localStorage","getItem","JSON","parse","allPlanets","setAllPlanets","isLoading","setIsLoading","length","removeItem","obj","setItem","stringify","holderPlanets","forEach","planet","ship","console","log","PlanetOn","children","className","sm","icon","spin","fileName","_jsxFileName","lineNumber","columnNumber","fluid","map","props","src","alt","props2","_c","$RefreshReg$"],"sources":["C:/Users/jgued/ClassWork/space-travel/src/pages/Planets.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport PlanetList from \"../context/PlanetList.js\";\r\nimport ShipList from \"../context/ShipList.js\";\r\nimport { useEffect, useState } from \"react\";\r\n//BOOTSTRAP\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nconst Planets = () => {\r\n  //STARTING PLANETS\r\n  const pList = [\r\n    { Name: null, Population: null, Img: null, Ships: [], key: null },\r\n  ];\r\n  // STARTING SHIPS\r\n  let shipRender = [];\r\n  if (\r\n    localStorage.getItem(\"allShipList\") === [] ||\r\n    localStorage.getItem(\"allShipList\") !== null\r\n  ) {\r\n    shipRender = [...JSON.parse(localStorage.getItem(\"allShipList\"))];\r\n  } else {\r\n    shipRender = [...ShipList];\r\n  }\r\n  const [allPlanets, setAllPlanets] = useState(pList);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // SETTING PLANETS AFTER INITIAL\r\n  useEffect(() => {\r\n    if (allPlanets.length === 1) {\r\n      if (localStorage.getItem(\"allPlanetsList\") == null) {\r\n        setAllPlanets((allPlanets) => {\r\n          return PlanetList;\r\n        });\r\n        setIsLoading((isLoading) => {\r\n          return false;\r\n        });\r\n      } else {\r\n        localStorage.removeItem(\"allPlanetsList\");\r\n        setAllPlanets((allPlanets) => {\r\n          const obj = JSON.parse(localStorage.getItem(\"allPlanetsList\"));\r\n          return obj;\r\n        });\r\n        setIsLoading((isLoading) => {\r\n          return false;\r\n        });\r\n      }\r\n    } else {\r\n    }\r\n  }, [allPlanets]);\r\n  localStorage.setItem(\"allPlanetsList\", JSON.stringify(allPlanets));\r\n  let holderPlanets = allPlanets;\r\n  allPlanets.forEach((planet) => {\r\n    shipRender.forEach((ship) => {\r\n      console.log(planet.Name);\r\n      console.log(ship.PlanetOn);\r\n      if (planet.Name === ship.PlanetOn) {\r\n      }\r\n    });\r\n  });\r\n  console.log(allPlanets);\r\n  if (isLoading) {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center loading\">\r\n          <Col sm=\"1\">\r\n            <FontAwesomeIcon icon={faSpinner} spin />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container fluid>\r\n        <NavBar />\r\n\r\n        {allPlanets.map((props) => {\r\n          return (\r\n            <Row className=\"singlePlanet \" key={props.key}>\r\n              <Col sm=\"2\" className=\"planetPic no-float\">\r\n                <img src={props.Img} alt={props.Name} />\r\n                <p>Name: {props.Name}</p>\r\n                <p>Population: {props.Population}</p>\r\n              </Col>\r\n              {shipRender.map((props2) => {\r\n                if (props2.PlanetOn === props.Name) {\r\n                  return (\r\n                    <Col\r\n                      className=\"planetShipInfo justify-content-center\"\r\n                      key={props2.key}\r\n                    >\r\n                      <div className=\"shipsOnPlanet\">\r\n                        <div>\r\n                          <img src={props2.Img} alt={props2.Name} />\r\n                        </div>\r\n                        <div>\r\n                          <p>Name: {props2.Name}</p>\r\n                          <p>Passengers: {props2.Population}</p>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  );\r\n                }\r\n              })}\r\n            </Row>\r\n          );\r\n        })}\r\n      </Container>\r\n    );\r\n  }\r\n};\r\nexport default Planets;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}