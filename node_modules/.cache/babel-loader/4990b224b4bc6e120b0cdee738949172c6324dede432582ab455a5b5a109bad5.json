{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jgued\\\\ClassWork\\\\space-travel\\\\src\\\\pages\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport { faArrowTrendUp } from \"@fortawesome/free-solid-svg-icons\";\nimport NavBar from \"../components/NavBar\";\nimport PlanetList from \"../context/PlanetList.js\";\nimport { useEffect, useState } from \"react\";\n//BOOTSTRAP\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const pList = [{\n    Name: null,\n    Population: null,\n    Img: null,\n    Ships: [],\n    key: null\n  }];\n  const [allPlanets, setAllPlanets] = useState(pList);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    if (allPlanets.length === 1) {\n      if (localStorage.getItem(\"allPlanetsList\") == null) {\n        setAllPlanets(allPlanets => {\n          return PlanetList;\n        });\n        setIsLoading(isLoading => {\n          return false;\n        });\n      } else {\n        localStorage.clear();\n        setAllPlanets(allPlanets => {\n          const obj = JSON.parse(localStorage.getItem(\"allPlanetsList\"));\n          console.log(obj);\n          return obj;\n        });\n      }\n    }\n  }, [allPlanets]);\n  localStorage.setItem(\"allPlanetsList\", JSON.stringify(allPlanets));\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center loading\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"1\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSpinner,\n          spin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), allPlanets.map(props => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"singlePlanet \",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"2\",\n          className: \"planetPic no-float\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.Img,\n            alt: props.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", props.Name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Population: \", props.Population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), props.Ships.map(props2 => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"planetShipInfo justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: props2.Img,\n                alt: props2.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Name: \", props2.Name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Passengers: \", props2.Population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, props2.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this);\n        })]\n      }, props.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"9UiqIewEkNuazURDP8cC4LE2yXA=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["faArrowTrendUp","NavBar","PlanetList","useEffect","useState","Container","Row","Col","Button","jsxDEV","_jsxDEV","Planets","_s","pList","Name","Population","Img","Ships","key","allPlanets","setAllPlanets","isLoading","setIsLoading","length","localStorage","getItem","clear","obj","JSON","parse","console","log","setItem","stringify","className","children","sm","FontAwesomeIcon","icon","faSpinner","spin","fileName","_jsxFileName","lineNumber","columnNumber","fluid","map","props","src","alt","props2","_c","$RefreshReg$"],"sources":["C:/Users/jgued/ClassWork/space-travel/src/pages/Planets.js"],"sourcesContent":["import { faArrowTrendUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport PlanetList from \"../context/PlanetList.js\";\r\nimport { useEffect, useState } from \"react\";\r\n//BOOTSTRAP\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nconst Planets = () => {\r\n  const pList = [\r\n    { Name: null, Population: null, Img: null, Ships: [], key: null },\r\n  ];\r\n  const [allPlanets, setAllPlanets] = useState(pList);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    if (allPlanets.length === 1) {\r\n      if (localStorage.getItem(\"allPlanetsList\") == null) {\r\n        setAllPlanets((allPlanets) => {\r\n          return PlanetList;\r\n        });\r\n        setIsLoading((isLoading) => {\r\n          return false;\r\n        });\r\n      } else {\r\n        localStorage.clear();\r\n        setAllPlanets((allPlanets) => {\r\n          const obj = JSON.parse(localStorage.getItem(\"allPlanetsList\"));\r\n          console.log(obj);\r\n          return obj;\r\n        });\r\n      }\r\n    }\r\n  }, [allPlanets]);\r\n  localStorage.setItem(\"allPlanetsList\", JSON.stringify(allPlanets));\r\n  if (isLoading) {\r\n    return (\r\n      <Row className=\"justify-content-center loading\">\r\n        <Col sm=\"1\">\r\n          <FontAwesomeIcon icon={faSpinner} spin />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  return (\r\n    <Container fluid>\r\n      <NavBar />\r\n\r\n      {allPlanets.map((props) => {\r\n        return (\r\n          <Row className=\"singlePlanet \" key={props.key}>\r\n            <Col sm=\"2\" className=\"planetPic no-float\">\r\n              <img src={props.Img} alt={props.Name} />\r\n              <p>Name: {props.Name}</p>\r\n              <p>Population: {props.Population}</p>\r\n            </Col>\r\n            {props.Ships.map((props2) => {\r\n              return (\r\n                <Col\r\n                  className=\"planetShipInfo justify-content-center\"\r\n                  key={props2.key}\r\n                >\r\n                  <div>\r\n                    <img src={props2.Img} alt={props2.Name} />\r\n                    <p>Name: {props2.Name}</p>\r\n                    <p>Passengers: {props2.Population}</p>\r\n                  </div>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\nexport default Planets;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}