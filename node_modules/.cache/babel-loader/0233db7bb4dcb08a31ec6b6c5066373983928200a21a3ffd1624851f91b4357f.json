{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jgued\\\\ClassWork\\\\space-travel\\\\src\\\\pages\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport NavBar from \"../components/NavBar\";\nimport PlanetList from \"../context/PlanetList.js\";\nimport { useEffect, useState } from \"react\";\n//BOOTSTRAP\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const pList = [{\n    Name: null,\n    Population: null,\n    Img: null,\n    Ships: [],\n    key: null\n  }];\n  const [allPlanets, setAllPlanets] = useState(pList);\n  useEffect(() => {\n    if (allPlanets.length === 1) {\n      if (localStorage.getItem(\"allPlanetsList\") == null) {\n        setAllPlanets(allPlanets => {\n          return PlanetList;\n        });\n        console.log(allPlanets);\n      } else {\n        localStorage.clear();\n        // setAllPlanets((allPlanets) => {\n        //   const obj = JSON.parse(localStorage.getItem(\"allPlanetsList\"));\n        //   console.log(obj);\n        //   return obj;\n        // });\n      }\n    }\n  }, [allPlanets]);\n  localStorage.setItem(\"allPlanetsList\", JSON.stringify(allPlanets));\n  console.log(JSON.parse(localStorage.getItem(\"allPlanetsList\")));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), allPlanets.map(props => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"singlePlanet\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"2\",\n          className: \"planetPic no-float\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.Img,\n            alt: props.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", props.Name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Population: \", props.Population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), props.Ships.map(props2 => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"planetShipInfo justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: props2.Img,\n                alt: props2.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Name: \", props2.Name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Passengers: \", props2.Population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, props2.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this);\n        })]\n      }, props.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"/ULna429wIlkdB6aqPq2xmEL8uU=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["NavBar","PlanetList","useEffect","useState","Container","Row","Col","Button","jsxDEV","_jsxDEV","Planets","_s","pList","Name","Population","Img","Ships","key","allPlanets","setAllPlanets","length","localStorage","getItem","console","log","clear","setItem","JSON","stringify","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","map","props","className","sm","src","alt","props2","_c","$RefreshReg$"],"sources":["C:/Users/jgued/ClassWork/space-travel/src/pages/Planets.js"],"sourcesContent":["import NavBar from \"../components/NavBar\";\r\nimport PlanetList from \"../context/PlanetList.js\";\r\nimport { useEffect, useState } from \"react\";\r\n//BOOTSTRAP\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nconst Planets = () => {\r\n  const pList = [\r\n    { Name: null, Population: null, Img: null, Ships: [], key: null },\r\n  ];\r\n  const [allPlanets, setAllPlanets] = useState(pList);\r\n  useEffect(() => {\r\n    if (allPlanets.length === 1) {\r\n      if (localStorage.getItem(\"allPlanetsList\") == null) {\r\n        setAllPlanets((allPlanets) => {\r\n          return PlanetList;\r\n        });\r\n        console.log(allPlanets);\r\n      } else {\r\n        localStorage.clear();\r\n        // setAllPlanets((allPlanets) => {\r\n        //   const obj = JSON.parse(localStorage.getItem(\"allPlanetsList\"));\r\n        //   console.log(obj);\r\n        //   return obj;\r\n        // });\r\n      }\r\n    }\r\n  }, [allPlanets]);\r\n  localStorage.setItem(\"allPlanetsList\", JSON.stringify(allPlanets));\r\n  console.log(JSON.parse(localStorage.getItem(\"allPlanetsList\")));\r\n  return (\r\n    <Container>\r\n      <NavBar />\r\n      {allPlanets.map((props) => {\r\n        return (\r\n          <Row className=\"singlePlanet\" key={props.key}>\r\n            <Col sm=\"2\" className=\"planetPic no-float\">\r\n              <img src={props.Img} alt={props.Name} />\r\n              <p>Name: {props.Name}</p>\r\n              <p>Population: {props.Population}</p>\r\n            </Col>\r\n            {props.Ships.map((props2) => {\r\n              return (\r\n                <Col\r\n                  className=\"planetShipInfo justify-content-center\"\r\n                  key={props2.key}\r\n                >\r\n                  <div>\r\n                    <img src={props2.Img} alt={props2.Name} />\r\n                    <p>Name: {props2.Name}</p>\r\n                    <p>Passengers: {props2.Population}</p>\r\n                  </div>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\nexport default Planets;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}